# {{ template_destpath }}
# {{ ansible_managed }}
# tags: site.conf.j2


{% if site_domain != ansible_nodename %}
server {
    listen 80;
    listen 443 ssl http2;

    ssl_certificate     /etc/letsencrypt/live/{{ ansible_nodename }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ ansible_nodename }}/privkey.pem;

    server_name {{ ansible_nodename }};

    root {{ wp_system_path }};

    location / {
        add_header X-Proxy-Cache $upstream_cache_status;

        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host {{ site_domain }};
        proxy_set_header X-Forwarded-Server {{ site_domain }};

        proxy_no_cache 1;
        proxy_cache_bypass 1;

        proxy_pass https://apache_ssl;

        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

{% if goaccess_enabled | bool %}
    location /goaccess {
        root /usr/share/nginx/html;
        try_files $uri/report.html =404;

        satisfy any;

{% for ip in goaccess_allow_ips %}
        allow {{ ip }};
{% endfor %}
        
        deny all;

        auth_basic "Login Required";
        auth_basic_user_file /etc/nginx/.htpasswd;
            
        location /goaccess/ws {
            proxy_pass_header Upgrade;
            proxy_pass https://localhost:7890;
        }    
    }
{% endif %}
}
{% endif %}

server {
    listen 80;
{% if use_letsencrypt is defined and use_letsencrypt|bool %}
    listen 443 ssl http2;
    ssl_certificate     /etc/letsencrypt/live/{{ site_domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ site_domain }}/privkey.pem;
{% endif %}

    server_name {{ site_domain }} www.{{ site_domain }};

    root {{ wp_system_path }};
    
    if ($http_cookie ~ "(_logged_in_|items_in_cart|jsid)") {
        set $cache_bypass 1;
    }

    location / {
        add_header X-Proxy-Cache $upstream_cache_status;

        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;        
{% if not nginx_proxy_cache_enable %}
        proxy_no_cache 1;
        proxy_cache_bypass 1;
{% else %}
        proxy_no_cache $cache_bypass;
        proxy_cache_bypass $cache_bypass;
{% endif %}
{% if use_letsencrypt is defined and use_letsencrypt|bool %}
        proxy_pass https://apache_ssl;
{% else %}
        proxy_pass http://apache;
{% endif %}
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

{% if nginx_accel_static_content %}
    location ~* \.(ico|jpe?g|gif|png|bmp|svg|tiff|exe|dmg|zip|rar|7z|docx?|xlsx?|js|css|less|sass|scss|ttf|woff2?|mp3|mp4|mkv|avi|mov|mpe?g|aac|wav|flac)$ {
        expires 7d;
        add_header Cache-Control "public, must-revalidate";
        add_header X-Proxy-Cache "STATIC/TYPE";
    }
{% endif %}

{% if nginx_ratelimit_enable %}
    location ~ {{ nginx_ratelimit_paths }} {
        limit_req_status 429;
        limit_req zone={{ nginx_ratelimit_zone }} burst={{ nginx_ratelimit_burst }}{% if nginx_ratelimit_nodelay %} nodelay{% endif %};

        proxy_no_cache 1;
        proxy_cache_bypass 1;
        add_header X-Proxy-Cache $upstream_cache_status;

        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;        

{% if use_letsencrypt is defined and use_letsencrypt|bool %}
        proxy_pass https://apache_ssl;
{% else %}
        proxy_pass http://apache;
{% endif %}
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }
{% endif %}

    location ~ "{{ nginx_cache_bypass_paths }}" {
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        add_header X-Proxy-Cache $upstream_cache_status;
        
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;        
{% if use_letsencrypt is defined and use_letsencrypt|bool %}
        proxy_pass https://apache_ssl;
{% else %}
        proxy_pass http://apache;
{% endif %}
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

{% if nginx_cache_purge_enable %}
    location ~ ^/purge(/.*) {
        allow 127.0.0.1;
        allow {{ ansible_default_ipv4.address }};
        deny all;
        proxy_cache_purge sitecache "$scheme$request_method$host$1";
    }
{% endif %}
{% if site_domain == ansible_nodename and goaccess_enabled | bool %}
    location /goaccess {
        root /usr/share/nginx/html;
        try_files $uri/report.html =404;

        satisfy any;

{% for ip in goaccess_allow_ips %}
        allow {{ ip }};
{% endfor %}
        
        deny all;

        auth_basic "Login Required";
        auth_basic_user_file /etc/nginx/.htpasswd;
            
        location /goaccess/ws {
            proxy_pass_header Upgrade;
            proxy_pass https://localhost:7890;
        }    
    }
{% endif %}
}
