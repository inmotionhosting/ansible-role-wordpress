---
#
# Setup
#

- name: Include variables and set facts
  include: facts.yml

- name: Create the system user group
  group:
    name: "{{ system_user }}"
    state: present

- name: Create the system user account
  user:
    name: "{{ system_user }}"
    group: "{{ system_user }}"
    groups: "{{ system_user }},nginx,nobody"

- name: Ensure system user home has execute permissions
  file:
    path: "/home/{{ system_user }}"
    mode: 0711

#
# Apache
#

- name: Include Debian-family tasks
  include: Debian.yml
  when: ansible_os_family|lower == "debian"

- name: Create httpd virtual host
  template:
    src: etc/httpd/conf.d/site.conf.j2
    dest: "{{ apache_config_site_path }}/{{ site_domain }}.conf"
  notify: restart apache

- name: Identify extra site configs
  ansible.builtin.find:
    paths: "{{ apache_config_site_path }}"
    file_type: file
    contains: '.*site\.conf\.j2.*'
    excludes: "{{ site_domain }}.conf"
  register: apache_extra_sites

- name: Remove extra site configs
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ apache_extra_sites.files }}"
  notify: restart apache

#
# PHP
#

- name: Place site-specific php-fpm config
  template:
    src: etc/php-fpm.d/site.conf.j2
    dest: "{{ php_fpm_config_pool_path }}/{{ site_domain }}.conf"
    owner: root
    group: root
    mode: 0644
  notify: restart php-fpm

- name: Remove default www pool
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/php/7.0/fpm/pool.d/www.conf
    - /etc/php-fpm.d/www.conf
  notify: restart php-fpm

- name: Identify extra fpm pool configs
  ansible.builtin.find:
    paths: "{{ php_fpm_config_pool_path }}"
    file_type: file
    contains: '.*site\.conf\.j2.*'
    excludes: "{{ site_domain }}.conf"
  register: php_fpm_extra_pools

- name: Remove extra site configs
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ php_fpm_extra_pools.files }}"
  notify: restart php-fpm

#
# WordPress
#
- name: Check for, Install, and Configure WordPress
  block:
  - name: Check for existing WordPress installation
    stat:
      path: "{{ wp_system_path }}/wp-config.php"
    changed_when: not wordpress_installed.stat.exists
    ignore_errors: true
    register: wordpress_installed

  - name: Install WordPress
    include: wordpress.yml
    when: wordpress_installed.changed

  - name: Get WordPress Site Url
    command: >-
      wp option get siteurl
    args:
      chdir: "{{ wp_system_path }}"
    become: true
    become_user: "{{ system_user }}"
    register: siteurl
    changed_when: false

  - name: Replace all site urls in database if changed
    command: >-
      wp search-replace "{{ siteurl.stdout }}" "{{ wp_protocol }}{{ site_domain }}" --skip-columns=guid
    args:
      chdir: "{{ wp_system_path }}"
    become: true
    become_user: "{{ system_user }}"
    when: siteurl.stdout is defined and siteurl.stdout != wp_protocol + site_domain
    vars:
      wp_protocol: >-
        {{ "https://"
        if use_letsencrypt is defined
        and use_letsencrypt|bool
        else "http://" }}

  - name: Ensure WordPress siteurl and homeurl are correct
    command: >-
      wp option set {{ item }} "{{ wp_protocol }}{{ site_domain }}"
    args:
      chdir: "{{ wp_system_path }}"
    become: true
    become_user: "{{ system_user }}"
    changed_when: false
    vars:
      wp_protocol: >-
        {{ "https://"
        if use_letsencrypt is defined
        and use_letsencrypt|bool
        else "http://" }}
    with_items:
      - siteurl
      - home

  - name: Ensure NGINX Helper Cache Path is correct
    command: >-
      wp config set RT_WP_NGINX_HELPER_CACHE_PATH /var/nginx/cache/sitecache/
    args:
      chdir: "{{ wp_system_path }}"
    become: true
    become_user: "{{ system_user }}"
    changed_when: false

  - name: Ensure content matches site protocol scheme
    command: >-
      wp search-replace

      "{{ 'http://'
      if use_letsencrypt is defined
      and use_letsencrypt|bool
      else 'https://' }}"

      "{{ 'https://'
      if use_letsencrypt is defined
      and use_letsencrypt|bool
      else 'http://' }}"
    args:
      chdir: "{{ wp_system_path }}"
    become: true
    become_user: "{{ system_user }}"
    changed_when: false
  when: install_wordpress | bool

# SELinux only
- name: Enable and configure SELinux
  include: selinux.yml
  when: ansible_selinux.status == "enabled"
