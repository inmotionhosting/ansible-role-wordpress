---
- name: Check if wp-cli is installed
  ansible.builtin.stat:
    path: /usr/bin/wp
  changed_when: false
  register: wpcli_installed

- name: Install wp-cli if missing
  ansible.builtin.get_url:
    url: "{{ wp_cli_source }}"
    dest: /usr/bin/wp
    mode: "0755"
  when: not wpcli_installed.stat.exists

#
# MySQL
#

- name: Set random MySQL password when not defined
  ansible.builtin.set_fact:
    wp_db_pass: "{{ pass_gen_alias }}"
  when: wp_db_pass is undefined

- name: Create WordPress database
  community.mysql.mysql_db:
    login_unix_socket: "{{ mysql_socket_path }}"
    name: "{{ wp_db_name }}"
    state: present
  register: wp_db_setup

- name: Create DB user
  community.mysql.mysql_user:
    login_unix_socket: "{{ mysql_socket_path }}"
    name: "{{ wp_db_user }}"
    password: "{{ wp_db_pass }}"
    priv: "{{ wp_db_name }}.*:ALL"
    state: present

#
# WordPress
#

- name: Download WordPress Core
  ansible.builtin.command: >-
    wp core download
  args:
    chdir: "{{ wp_system_path }}"
    creates: "{{ wp_system_path }}/index.php"
  become: true
  become_user: "{{ system_user }}"

- name: Create wp-config.php
  ansible.builtin.command: >-
    wp config create
    --dbname="{{ wp_db_name }}"
    --dbuser="{{ wp_db_user }}"
    --dbpass="{{ wp_db_pass }}"
  args:
    chdir: "{{ wp_system_path }}"
    creates: "{{ wp_system_path }}/wp-config.php"
  become: true
  become_user: "{{ system_user }}"

- name: Set DB_HOST to mysql unixsocket
  ansible.builtin.command: >-
    wp config set DB_HOST
    "localhost:{{ mysql_socket_path }}"
  args:
    chdir: "{{ wp_system_path }}"
  become: true
  become_user: "{{ system_user }}"
  changed_when: false

- name: Install WordPress core
  ansible.builtin.command: >-
    wp core install
    --url="{{ site_domain }}"
    --title="{{ site_domain }}"
    --admin_user="{{ site_user }}"
    --admin_password="{{ site_pass }}"
    --admin_email="{{ site_email }}"
    --skip-email
  args:
    chdir: "{{ wp_system_path }}"
  become: true
  become_user: "{{ system_user }}"
  changed_when: false

- name: Ensure permissions are correct for "{{ "{}/wp-*/".format(wp_system_path) }}"
  ansible.builtin.file:
    path: "{{ wp_system_path }}/{{ item.path }}/"
    state: directory
    owner: "{{ system_user }}"
    group: "{{ system_user }}"
    mode: "0755"
  loop:
    - path: wp-admin
    - path: wp-content
    - path: wp-includes

- name: Block XML-RPC requests in .htaccess
  ansible.builtin.blockinfile:
    path: "{{ wp_system_path }}/.htaccess"
    owner: "{{ system_user }}"
    group: "{{ system_user }}"
    mode: "0644"
    create: true
    marker: "# {mark} Block XML-RPC"
    block: |
      <Files xmlrpc.php>
      Order Allow,Deny
      Deny from all
      </Files>

#
# Plugins
#

- name: Install plugins
  ansible.builtin.command: >-
    wp plugin install {{ item }} --activate
  args:
    chdir: "{{ wp_system_path }}"
    creates: "{{ wp_system_path }}/wp-content/plugins/{{ item }}"
  become: true
  become_user: "{{ system_user }}"
  when:
    - wp_plugins is defined
    - wp_plugins | length > 0
  with_items: "{{ wp_plugins }}"

- name: Uninstall default plugins
  ansible.builtin.command: >-
    wp plugin uninstall hello
  args:
    chdir: "{{ wp_system_path }}"
    removes: "{{ wp_system_path }}/wp-content/plugins/hello.php"
  become: true
  become_user: "{{ system_user }}"

- name: Configure W3 Total Cache
  ansible.builtin.command: >-
    wp w3-total-cache option set
    {{ item.setting }} {{ item.value }} --type={{ item.type }}
  args:
    chdir: "{{ wp_system_path }}"
  become: true
  become_user: "{{ system_user }}"
  when:
    - wp_plugins is defined
    - wp_plugins | length > 0
    - ("w3-total-cache" in wp_plugins)
  with_items: "{{ wp_w3tc_settings }}"
  changed_when: false

#
# Themes
#

- name: Install themes
  ansible.builtin.command: >-
    wp theme install {{ item }} --activate
  args:
    chdir: "{{ wp_system_path }}"
    creates: "{{ wp_system_path }}/wp-content/themes/{{ item }}"
  become: true
  become_user: "{{ system_user }}"
  when:
    - wp_themes is defined
    - wp_themes | length > 0
  with_items: "{{ wp_themes }}"
